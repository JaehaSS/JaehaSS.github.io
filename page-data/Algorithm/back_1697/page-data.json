{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/Algorithm/back_1697/",
    "result": {"data":{"cur":{"id":"12e2c932-65ef-5bac-a9f1-3b980f29afe5","html":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n\n\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque \n\n<span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>readline\n\n\nN<span class=\"token punctuation\">,</span> K <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\narray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000001</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">bfs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    q <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> q<span class=\"token punctuation\">:</span>\n        now_node <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> now_node <span class=\"token operator\">==</span> K<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> array<span class=\"token punctuation\">[</span>now_node<span class=\"token punctuation\">]</span>\n        \n        <span class=\"token keyword\">for</span> next_node <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span>now_node <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> now_node <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> now_node <span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> next_node <span class=\"token operator\">&lt;</span> <span class=\"token number\">100001</span> <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> array<span class=\"token punctuation\">[</span>next_node<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                array<span class=\"token punctuation\">[</span>next_node<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>now_node<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n                q<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>next_node<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>bfs<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","excerpt":"","frontmatter":{"date":"September 30, 2022","title":"백준 1697 숨바꼭질 python","categories":"알고리즘","author":"째하","emoji":"🧢"},"fields":{"slug":"/Algorithm/back_1697/"}},"next":{"id":"f69752fe-7720-5622-b1e0-76b976c7c883","html":"<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> ins<span class=\"token punctuation\">.</span>ANIMAL_ID<span class=\"token punctuation\">,</span> ins<span class=\"token punctuation\">.</span>NAME\n<span class=\"token keyword\">FROM</span> ANIMAL_INS ins\n<span class=\"token keyword\">inner</span> <span class=\"token keyword\">JOIN</span> ANIMAL_outs outs\n<span class=\"token keyword\">ON</span> ins<span class=\"token punctuation\">.</span>ANIMAL_ID <span class=\"token operator\">=</span> outs<span class=\"token punctuation\">.</span>ANIMAL_ID\n<span class=\"token keyword\">where</span> ins<span class=\"token punctuation\">.</span><span class=\"token keyword\">datetime</span> <span class=\"token operator\">></span> outs<span class=\"token punctuation\">.</span><span class=\"token keyword\">datetime</span>\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> ins<span class=\"token punctuation\">.</span><span class=\"token keyword\">datetime</span></code></pre></div>","frontmatter":{"date":"September 29, 2022","title":"프로그래머스 있었는데 없었습니다 SQL","categories":"알고리즘","author":"째하","emoji":"🧢"},"fields":{"slug":"/Algorithm/pro_lv3_animal_2/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://JaehaSS.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/Algorithm/back_1697/","nextSlug":"/Algorithm/pro_lv3_animal_2/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}