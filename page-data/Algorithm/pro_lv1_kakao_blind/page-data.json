{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/Algorithm/pro_lv1_kakao_blind/",
    "result": {"data":{"cur":{"id":"7f86f4cb-befa-5dbc-8f39-9163d4ce383e","html":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> defaultdict\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>id_list<span class=\"token punctuation\">,</span> report<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    report <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>report<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 유저가 신고한 dict</span>\n    user <span class=\"token operator\">=</span> defaultdict<span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 신고당한 유저 ID 횟수</span>\n    report_cnt <span class=\"token operator\">=</span> defaultdict<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">for</span> r <span class=\"token keyword\">in</span> report<span class=\"token punctuation\">:</span>\n        reporter<span class=\"token punctuation\">,</span> reported <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        user<span class=\"token punctuation\">[</span>reporter<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>reported<span class=\"token punctuation\">)</span>\n        report_cnt<span class=\"token punctuation\">[</span>reported<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    \n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> id_list<span class=\"token punctuation\">:</span>\n        cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> user<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> report_cnt<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> k<span class=\"token punctuation\">:</span>\n                cnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>","excerpt":"","frontmatter":{"date":"September 26, 2022","title":"프로그래머스 신고 결과 받기 python","categories":"알고리즘","author":"째하","emoji":"🧢"},"fields":{"slug":"/Algorithm/pro_lv1_kakao_blind/"}},"next":{"id":"f973912e-a288-5cb5-a692-c7c501be1df4","html":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">bfs</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> graph<span class=\"token punctuation\">,</span> visited<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    queue <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    result <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    visited<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">while</span> queue<span class=\"token punctuation\">:</span>\n        v <span class=\"token operator\">=</span> queue<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> graph<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> visited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                queue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n                result <span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n                visited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">return</span> result\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> wires<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> n\n    graph <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    \n    <span class=\"token keyword\">for</span> v1<span class=\"token punctuation\">,</span>v2 <span class=\"token keyword\">in</span> wires<span class=\"token punctuation\">:</span>\n        graph<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>v2<span class=\"token punctuation\">)</span>\n        graph<span class=\"token punctuation\">[</span>v2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">)</span>\n            \n    <span class=\"token keyword\">for</span> start<span class=\"token punctuation\">,</span>not_visit <span class=\"token keyword\">in</span> wires<span class=\"token punctuation\">:</span>\n        visitied <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        visitied<span class=\"token punctuation\">[</span>not_visit<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n        result <span class=\"token operator\">=</span> bfs<span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span>graph<span class=\"token punctuation\">,</span> visitied<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> answer<span class=\"token punctuation\">:</span>\n            answer <span class=\"token operator\">=</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        \n    <span class=\"token keyword\">return</span> answer\n</code></pre></div>","frontmatter":{"date":"September 25, 2022","title":"프로그래머스 전력망을 둘로 나누기 python","categories":"알고리즘","author":"째하","emoji":"🧢"},"fields":{"slug":"/Algorithm/pro_lv2_3/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://JaehaSS.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/Algorithm/pro_lv1_kakao_blind/","nextSlug":"/Algorithm/pro_lv2_3/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}